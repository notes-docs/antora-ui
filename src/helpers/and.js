'use strict'

// and 的模块函数，它接收多个参数并执行逻辑“与”（AND）操作。具体来说，它会检查传入的所有参数是否都为 true

// 导出一个函数，这个函数接收任意数量的参数（使用剩余参数语法 ...args）
// 这个函数的目的是对传入的参数执行“与”操作：
//
// * 如果传入 3 个参数，它只会检查前两个参数的逻辑“与”。
// * 如果传入的参数少于 2 个，它会抛出错误。
// * 对于传入超过 2 个参数的情况，它会忽略最后一个参数，仅对其余的参数进行“与”操作，返回它们是否全为真。
module.exports = (...args) => {
  const numArgs = args.length
  // 只有前两个会被用于运算，第三个参数会被忽略
  if (numArgs === 3) return args[0] && args[1]
  // 如果传入的参数少于 3 个，抛出一个错误，表明 and 函数至少需要两个参数。这里的错误信息是自定义的，符合 {{and}} 帮助器的使用规则。
  if (numArgs < 3) throw new Error('{{and}} helper expects at least 2 arguments')
  // 删除 args 数组中的最后一个元素。这是为了处理多于 3 个参数的情况，将最后一个参数排除在外，仅对前面的参数执行“与”操作。
  args.pop()
  // 对剩余的参数使用 every() 方法，它会检查每个元素是否都为真（truthy）。如果所有元素都为真，则返回 true；如果有任何元素为假（falsy），则返回 false
  return args.every((it) => it)
}
